#!/usr/bin/env ruby

def run_git_whitespace_check()
  git_ws_check = `git diff-index --color-words --check --cached HEAD --`
  if git_ws_check.to_s.strip.length != 0
    puts "Checking for whitespace errors..."
    unless $?.success?
      puts git_ws_check
      exit 1
    end
  end
end

def run_tailor(files)
  puts 'Checking syntax...'
  files.lines do |file|
    file.chomp! # remove carriage returns
    tailor_output = `tailor --max-line-length 999 #{ file }`
    unless $?.success?
      puts tailor_output
      exit 1
    end
  end
  puts "\tcleared #{ files.lines.count } files"
end

def run_knife_test(path, dirs)
  puts "Checking for cookbook errors..."
  print "\t"
  dirs.lines do |dir|
    dir.chomp!
    print dir + " "
    knife_output = `knife cookbook test #{ dir } -c #{ path }/.chef/knife.rb`
    unless $?.success?
      puts knife_output
      exit 1
    end
  end
end

def run_foodcritic(dirs, rules)
  puts "\nRunning foopdcritic..."
  print "\t"
  dirs.lines do |dir|
    print dir + " "
    dir.chomp!
    fc_output = `foodcritic --tags #{ rules } cookbooks/#{ dir }`
      unless $?.success?
      puts fc_output
      exit 1
    end
  end
end

run_git_whitespace_check()

PARENT_PATH = "#{ `git rev-parse --show-toplevel`.chomp }"
COOKBOOK_PATH = "#{ PARENT_PATH}/cookbooks/" 

# Get the file names of (A)dded, (C)opied, (M)odified Ruby files
staged_files = `git diff-index --name-only --diff-filter=ACM HEAD -- '*.rb'`
if staged_files.to_s.strip.length == 0
  exit
else
  run_tailor(staged_files)
end

staged_cookbooks = `git diff-index --name-only --diff-filter=ACM HEAD -- '*.rb' | cut -d/ -f2 | sort | uniq`
if staged_cookbooks.to_s.strip.length != 0
  run_knife_test(PARENT_PATH, staged_cookbooks)

  $stdout.flush
  rules = "FC006,FC008,FC009,FC010,FC018,FC030,FC031,FC032,FC037,FC038,FC040,FC042"
  run_foodcritic(staged_cookbooks, rules)
end
